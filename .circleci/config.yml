aliases:
  - &docs-job
    docker:
      - image: cloudreach/sceptre-circleci:0.3
        environment:
          REPOSITORY_PATH: "/home/circleci/docs"
#          DEPLOYMENT_GIT_HTTPS: "https://github.com/sceptre/docs.git"
          DEPLOYMENT_GIT_SSH: "git@github.com:cicd-organisation/docs.git"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "37:9f:b9:1c:64:6c:8c:f3:36:83:69:49:21:7d:0f:e4"
            - "d4:57:32:0e:92:a9:ae:c7:af:9c:f0:cc:64:70:83:75"
            - "36:09:75:e7:b9:c3:ff:50:b5:52:a9:4c:bc:75:d5:36"
#            - "SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8"
#            - "SHA256:msDRkp8co/NBG0rOF5Fs59KwPSR+oW9R7wktcTwYrl4"
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'Build and deploy docs'
          command: |
            set -e

            # Workaround old docker images with incorrect $HOME
            # check https://github.com/docker/docker/issues/2968 for details
            if [ "${HOME}" = "/" ]
            then
              export HOME=$(getent passwd $(id -un) | cut -d: -f6)
            fi

            mkdir -p ~/.ssh

            echo '
            github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
            bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
            ' >> ~/.ssh/known_hosts
            . ./venv/bin/activate
            chmod +x .circleci/github-pages.sh
            ./.circleci/github-pages.sh

version: 2
jobs:
  build:
    docker:
      - image: cloudreach/sceptre-circleci:0.3
    steps:
      - checkout
      - run:
          name: 'Creating Virtualenv'
          command: virtualenv venv
      - restore_cache:
          key: sceptre-{{ .Environment.CACHE_VERSION }}-requirements-{{ arch }}-{{ checksum "requirements.txt" }}
      - run:
          name: 'Installing Requirements'
          command: |
            . ./venv/bin/activate
            pip install -r requirements.txt
            pip install awscli
      - save_cache:
          key: sceptre-{{ .Environment.CACHE_VERSION }}-requirements-{{ arch }}-{{ checksum "requirements.txt" }}
          paths:
            - venv
      - run:
          name: 'Installing Sceptre'
          command: |
            . ./venv/bin/activate
            pip install .
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
  lint-and-unit-tests:
    docker:
      - image: cloudreach/sceptre-circleci:0.3
    steps:
      - attach_workspace:
          at: /home/circleci
      - restore_cache:
          key: sceptre-{{ .Environment.CACHE_VERSION }}-tox-requirements-{{ arch }}-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}
      - run:
          name: 'Linting'
          command: |
            . ./venv/bin/activate
            make lint
      - run:
          name: 'Unit Test and Coverage'
          command: |
            tox
      - store_test_results:
          path: htmlcov
      - store_test_results:
          path: htmlcov
      - store_test_results:
          path: build/pytest
      - store_artifacts:
          path: build/pytest
      - save_cache:
          key: sceptre-{{ .Environment.CACHE_VERSION }}-tox-requirements-{{ arch }}-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}
          paths:
            - .tox
  integration-tests:
    parallelism: 2
    docker:
      - image: cloudreach/sceptre-circleci:0.3
        environment:
          AWS_DEFAULT_REGION: eu-west-1
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'Integration Testing'
          command: |
            . ./venv/bin/activate
            behave --junit \
                   --junit-directory build/behave \
                   $(circleci tests glob "integration-tests/features/*.feature" | circleci tests split --split-by=timings)
      - store_test_results:
          path: build/behave
      - store_artifacts:
          path: build/behave

  deploy-docs-branch:
    *docs-job
  deploy-docs-tag:
    *docs-job

  deploy-pypi:
    docker:
      - image: cloudreach/sceptre-circleci:0.3
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'Create Distributions'
          command: |
            . ./venv/bin/activate
            make dist
      - run:
          name: 'Upload Distributions'
          command: |
            . ./venv/bin/activate
            pip install twine
            twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - lint-and-unit-tests:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - integration-tests:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /^pull\/.*/
      # Deploy docs when commit to master
      - deploy-docs-branch:
          requires:
            - lint-and-unit-tests
            - integration-tests
          filters:
            branches:
              only: master
      # Deploy docs when commit is tagged
      - deploy-docs-tag:
          requires:
            - lint-and-unit-tests
#            - integration-tests
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-pypi-approval:
          type: approval
          requires:
            - lint-and-unit-tests
            - integration-tests
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy-pypi:
          requires:
            - deploy-pypi-approval
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
